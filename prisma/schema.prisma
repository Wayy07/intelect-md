generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Utilizator {
  id        String           @id @default(cuid())
  email     String           @unique
  nume      String?
  imagine   String?
  rol       RolUtilizator    @default(CLIENT)
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
  parola    String?
  tipAuth   TipAutentificare @default(GOOGLE)
  comenzi   Comanda[]

  @@map("utilizatori")
}

model CategoriePrincipala {
  id           String         @id @default(cuid())
  nume         String         @unique
  descriere    String?
  imagine      String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  activ        Boolean        @default(true)
  subcategorii Subcategorie[]

  @@map("categorii_principale")
}

model Subcategorie {
  id                    String              @id @default(cuid())
  nume                  String
  descriere             String?
  imagine               String?
  categoriePrincipalaId String
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  activ                 Boolean             @default(true)
  produse               Produs[]
  categoriePrincipala   CategoriePrincipala @relation(fields: [categoriePrincipalaId], references: [id], onDelete: Cascade)

  @@unique([nume, categoriePrincipalaId])
  @@map("subcategorii")
}

model Produs {
  id             String           @id @default(cuid())
  cod            String           @unique
  nume           String
  descriere      String
  pret           Float
  pretRedus      Float?
  stoc           Int              @default(0)
  imagini        String[]
  specificatii   Json?
  subcategorieId String
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  activ          Boolean          @default(true)
  stare          StareProdus      @default(NOU)
  culoare        String?
  dimensiuni     Json?
  greutate       Float?
  detaliiComenzi DetaliuComanda[]
  subcategorie   Subcategorie     @relation(fields: [subcategorieId], references: [id])

  @@map("produse")
}

model Comanda {
  id             String           @id @default(cuid())
  utilizatorId   String?
  numarComanda   String           @unique
  status         StatusComanda    @default(IN_ASTEPTARE)
  adresaLivrare  String
  telefon        String
  email          String
  metodaPlata    MetodaPlata
  totalComanda   Float
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  codPostal      String?
  note           String?
  numeClient     String
  orasClient     String
  prenumeClient  String
  utilizator     Utilizator?      @relation(fields: [utilizatorId], references: [id])
  detaliiComenzi DetaliuComanda[]

  @@map("comenzi")
}

model DetaliuComanda {
  id         String   @id @default(cuid())
  comandaId  String
  produsId   String
  cantitate  Int
  pretUnitar Float
  subtotal   Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  comanda    Comanda  @relation(fields: [comandaId], references: [id])
  produs     Produs   @relation(fields: [produsId], references: [id])

  @@map("detalii_comenzi")
}

enum RolUtilizator {
  ADMIN
  CLIENT
}

enum StatusComanda {
  IN_ASTEPTARE
  CONFIRMATA
  IN_PROCESARE
  EXPEDIATA
  LIVRATA
  ANULATA
}

enum MetodaPlata {
  CARD
  RAMBURS
  TRANSFER_BANCAR
  RIDICARE_MAGAZIN
}

enum TipAutentificare {
  EMAIL_PAROLA
  GOOGLE
}

enum StareProdus {
  NOU
  UTILIZAT
}
